plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    // Printing out the keystore values to the console for debugging purposes
    println "Loaded Keystore Properties"
//    println "Key Alias: ${keystoreProperties['keyAlias']}"
//    println "Key Password: ${keystoreProperties['keyPassword']}"
//    println "Store File: ${keystoreProperties['storeFile']}"
//    println "Store Password: ${keystoreProperties['storePassword']}"
} else {
    println "Key properties file not found!"

}
android {
    namespace = "com.chat.skin_chat_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.chat.skin_chat_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        debug {
            keyAlias 'devkey'
            keyPassword 'debug@123'
            storeFile file('../dev-keystore.jks')
            storePassword 'debug@123'
        }

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }


    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig = signingConfigs.release
            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += "default"

    productFlavors {
        create("dev") {
            dimension = "default"
            resValue "string", "app_name", "dev"
            applicationIdSuffix = ".dev"
            versionNameSuffix "-dev"
        }
        create("prod") {
            dimension = "default"
            resValue "string", "app_name", "S.K.I.N App"
            applicationIdSuffix = ""
        }
    }



}

flutter {
    source = "../.."
}
